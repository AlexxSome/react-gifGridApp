{"version":3,"sources":["components/AddCategory.js","helpers/getGif.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"yMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAmB5C,OACQ,sBAAMC,SAZO,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,iBAETN,EAAWO,OAAOC,OAAS,IAC1BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,MAMd,SACI,uBACIS,KAAK,OACLC,MAAOX,EACPY,SApBU,SAACT,GACvBF,EAAcE,EAAEU,OAAOF,a,+BCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEJ,mCACTC,EAHa,kGAGoFC,UAAUH,IAH9F,SAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACPC,GAAQD,EAAIC,GACZC,MAAQF,EAAIE,MACZV,IAAG,UAAKQ,EAAIG,cAAT,aAAK,EAAYC,iBAAiBZ,QAXtB,kBAeZM,GAfY,4CAAH,sDCEPO,EAAc,SAAC,GAAsB,IAArBJ,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OADAZ,QAAQC,IAAIoB,EAAIC,EAAOV,GAEnB,sBAAKc,UAAU,gDAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAKA,QCFJO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFX,SAACA,GAAa,IAAD,EACXhB,mBAAS,CAC/BuB,KAAO,GACPa,SAAS,IAHwB,mBAC9BC,EAD8B,KACvBC,EADuB,KAqBrC,OAbAC,qBAAW,WAEPxB,EAAQC,GAAUwB,MAAK,SAAAC,GAAI,OACvBC,YAAW,WACPJ,EAAS,CACLf,KAAKkB,EACLL,SAAS,MAEd,WAGR,CAACpB,IAEGqB,EDjBwBM,CAAa3B,GAAhCa,EAFuB,EAE5BN,KAAaa,EAFe,EAEfA,QAEpB,OACI,qCACA,6BAAKpB,IAEJoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEZ,qBAAKA,UAAU,YAAf,SAEYH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,aACIA,IAAKA,GACGA,aEhBvBkB,EAAe,WAAM,MAGM5C,mBAAS,CAAC,aAHhB,mBAGvB6C,EAHuB,KAGX9C,EAHW,KAW9B,OACI,gCACI,wDACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAKA,6BACQ8C,EAAWpB,KAAK,SAACqB,GACb,OAAO,cAAC,EAAD,CAAmB9B,SAAU8B,GAAfA,Y,MCpB7CC,IAASC,OACJ,cAAC,EAAD,IACDC,SAASC,eAAe,W","file":"static/js/main.c3c35fd4.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log('Evento submit');\r\n\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n            <form onSubmit={handleSubmit}>\r\n                <input \r\n                    type=\"text\" \r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                    >\r\n                </input>\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async (category) => {\r\n        \r\n    const apiKey = 'lOoyQ2qLL2LMsA4JxAVu2WjtNNBOmVbg';\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=6&api_key=lOoyQ2qLL2LMsA4JxAVu2WjtNNBOmVbg&q=${encodeURI(category)}`;\r\n    const resp = await fetch (url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n        id:     img.id,\r\n        title:  img.title,\r\n        url:    img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeftBig\">\r\n            <img src={url} alt={title} />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGif';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n        <h3>{category}</h3>\r\n\r\n        {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n        \r\n        <div className=\"card-grid\">           \r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem                            \r\n                            img={img}\r\n                                {...img}\r\n                            />\r\n                    ))\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\nimport { getGifs } from '../helpers/getGif'\r\n\r\nexport const useFetchGifs = (category) =>{\r\n    const [state, setstate] = useState({\r\n        data : [],\r\n        loading: true\r\n    })\r\n\r\n    //const [images, setTmages] = useState([]);\r\n    \r\n    useEffect( () => {\r\n    //     getGifs(category).then(imgs => setTmages(imgs));\r\n        getGifs(category).then(imgs => \r\n            setTimeout(()=>{\r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false\r\n                })\r\n            }, 1500)\r\n\r\n        )\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['Shingeki', 'Boku no Hero', 'Shokugeki no Soma'];\r\n    const [categories, setCategories] = useState(['Shingeki']);\r\n\r\n    // const handleAdd= () =>{\r\n        //setCategories([...categories, \"HunterXhunter\"]);\r\n\r\n    //     setCategories(cats => [...cats, \"Hunter X Hunter\"]);\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2>GifExpertApp Component</h2>      \r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr /> \r\n\r\n            {// <button onClick={handleAdd}>Agregar</button>   \r\n            }\r\n\r\n            <ol>\r\n                {   categories.map( (cat) => {\r\n                        return <GifGrid key={cat} category={cat}/>\r\n                    })\r\n                }\r\n            </ol>   \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n     <GifExpertApp />,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}